{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractOrigin",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "valueFee",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "AddressInsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedInnerCall",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "projectId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "contractBridge",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "deployerAccount",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "monitorAccount",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "contractBridgeOrigin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "contractToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "deployedFee",
						"type": "uint256"
					}
				],
				"name": "DeployedBridge",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "contractBridge",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "toBlockchain",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "toAddress",
						"type": "string"
					}
				],
				"name": "DepositToken",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "checkUnique",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deployFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractOrigin",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "monitorAccount",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "projectId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "feeNative",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feePercentBridge",
						"type": "uint256"
					}
				],
				"name": "deployedBridge",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "listBridge",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "projectWallet",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "setDeployFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "contractOrigin",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "active",
						"type": "bool"
					}
				],
				"name": "setListBridge",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"errors": {
				"AddressInsufficientBalance(address)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				],
				"FailedInnerCall()": [
					{
						"details": "A call to an address target failed. The target may have reverted."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Factory.sol": "Factory"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
				"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
			]
		},
		"contracts/CloneFactory.sol": {
			"keccak256": "0xd007e4a57da8fae0ece1ece62c6b1a455d6aac7824bab985c3a7bd92d82aeeec",
			"license": "MIT",
			"urls": [
				"bzz-raw://9f59f2ebea0c65951088801e38cdc5af9d4763e587abbdc29bc772677d127741",
				"dweb:/ipfs/QmNbKzZ6vQjfBd2H8LJT519Ko3GuieQewkf7GyzBgVSa61"
			]
		},
		"contracts/Context.sol": {
			"keccak256": "0xb9ec336e249ceccfb0a57e08888751daf2cac2178c2731f95a5c016f671b63f9",
			"license": "MIT",
			"urls": [
				"bzz-raw://0575677b0057057520093ee58a90076f6a13ecc8e7a454e93862c8276eb8815a",
				"dweb:/ipfs/QmZzGehCq8fSfRVxmWbDRRWXNCaBhtNtvFu2VfLmvdAcds"
			]
		},
		"contracts/Factory.sol": {
			"keccak256": "0xc0648ced4a940066a1c7f081e032d4babe2b4fbd3e552eb378e251de065df3c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a10076baa5d3ced5294aff5e4be4112e377fbddd39250add99843b0372a273c",
				"dweb:/ipfs/QmZWGsQegxF6Wv5Bnye5bMkSfyJ1gUpTzTnYhDumJK2fAC"
			]
		},
		"contracts/IBridge.sol": {
			"keccak256": "0x0e38210d9289dd8ecd134f22675942c9ee0dcbe8d80ac433fc049afa226ab143",
			"license": "MIT",
			"urls": [
				"bzz-raw://01c385dad2631439b035f2b4e12d74e3b8dc827f11829dcf1f9292b1e67aeed9",
				"dweb:/ipfs/Qmbcm5PJsvQPE3CTaoPmgBpDNGcK5nNXUnpUa2fpu8fZYb"
			]
		},
		"contracts/IERC20.sol": {
			"keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
				"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0x75d1e6250c190ca0500e5a2b7def5e5d6fd3edbe368a6de93dea256471d04593",
			"license": "MIT",
			"urls": [
				"bzz-raw://09b8acacbbc0353985940f90022a8e15d15d9767e1eeaa721e1e21655c34c62e",
				"dweb:/ipfs/Qmeb2CejPutKdfNpncsRny8cibhF7aVMJpR6ZvMYruDWLM"
			]
		},
		"contracts/ReentrancyGuard.sol": {
			"keccak256": "0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd",
				"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk"
			]
		}
	},
	"version": 1
}